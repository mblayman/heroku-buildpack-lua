#!/bin/bash

set -euo pipefail

# https://devcenter.heroku.com/articles/buildpack-api#bin-compile

BUILD_DIR=$1
CACHE_DIR=$2
# ENV_DIR=$3

function step {
    echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

VERSION="5.4"
LUA="lua$VERSION"

step "Update apt"

APT_CACHE_DIR="$CACHE_DIR/apt/cache"
mkdir -p "$APT_CACHE_DIR"
APT_STATE_DIR="$CACHE_DIR/apt/state"
mkdir -p "$APT_STATE_DIR"
APT_OPTIONS=(-o debug::nolocking=true -o "dir::cache=$APT_CACHE_DIR" -o "dir::state=$APT_STATE_DIR")
apt-get "${APT_OPTIONS[@]}" update | indent

step "Install Lua and LuaRocks"

# Download and "install" packages into .apt.
apt-get "${APT_OPTIONS[@]}" -y -d install \
    "$LUA" \
    "lib$LUA-dev" \
    luarocks | indent

mkdir -p "$BUILD_DIR/.apt"

for DEB in "$APT_CACHE_DIR"/archives/*.deb
do
  [[ -e "$DEB" ]] || break
  dpkg -x "$DEB" "$BUILD_DIR/.apt/"
done

# The rest of the compile process needs what was just installed,
# so add the apt bin directory to the PATH.
# Sourcing the LUA_PROFILE won't work because the compile script works
# with BUILD_DIR while the profile expects HOME.
APT_USR="$BUILD_DIR/.apt/usr"
APT_BIN="$APT_USR/bin"
export PATH="$APT_BIN:$PATH"

cd "$APT_BIN"

# Include a convenient symlink so that lua can be called
# without the version number.
ln -s "$LUA" lua

# lua-any assumes that the root is in /usr/bin instead
# of the locally installed apt bin directory.
# Because of this behavior, it fails to find the Lua interpreter.
# This buildpack supports a single Lua version,
# so replace lua-any with the specific interpreter.
rm lua-any
ln -s "$LUA" lua-any

cd - > /dev/null

# Configure Lua and Luarocks to find files in .apt.
export LUA_PATH="$BUILD_DIR/.apt/usr/share/lua/$VERSION/?.lua;.apt/usr/share/lua/$VERSION/?/init.lua;;"
export LUA_CPATH="$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu/lua/$VERSION/?.so;;"

# Luarocks needs additional configuration to find Lua.
mkdir -p "$APT_USR/etc/luarocks"
luarocks config --scope system lua_dir "$APT_USR"

step "Install packages"

rockspecs=( "$BUILD_DIR"/*.rockspec )
TREE_DIR="$BUILD_DIR/.luarocks"
"$BUILD_DIR/.apt/usr/bin/luarocks" --tree "$TREE_DIR" make "${rockspecs[0]}"

# TODO: Include tree in Lua paths.
# TODO: Include tree bin in PATH.

# Make a profile so that Lua is available at startup.
mkdir -p "$BUILD_DIR/.profile.d"
LUA_PROFILE="$BUILD_DIR/.profile.d/000_lua.sh"
cat <<EOF >"$LUA_PROFILE"
export PATH="\$HOME/.apt/usr/bin:\$PATH"
export LUA_PATH="\$HOME/.apt/usr/share/lua/$VERSION/?.lua;.apt/usr/share/lua/$VERSION/?/init.lua;;"
export LUA_CPATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu/lua/$VERSION/?.so;;"
EOF

exit 0
